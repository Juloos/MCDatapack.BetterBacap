execute if entity @s[advancements={blazeandcave:nether/this_ones_mine=true}] unless data storage bac_tracker:data players[0].advancements[{name:"this_ones_mine",category:"nether"}] run function bacap_rewards:nether/this_ones_mine
execute if entity @s[advancements={minecraft:nether/distract_piglin=true}] unless data storage bac_tracker:data players[0].advancements[{name:"oh_shiny",category:"nether"}] run function bacap_rewards:nether/oh_shiny
execute if entity @s[advancements={blazeandcave:nether/cultural_misunderstandings=true}] unless data storage bac_tracker:data players[0].advancements[{name:"cultural_misunderstandings",category:"nether"}] run function bacap_rewards:nether/cultural_misunderstandings
execute if entity @s[advancements={minecraft:nether/obtain_crying_obsidian=true}] unless data storage bac_tracker:data players[0].advancements[{name:"who_is_cutting_onions",category:"nether"}] run function bacap_rewards:nether/who_is_cutting_onions
execute if entity @s[advancements={blazeandcave:nether/anchorman=true}] unless data storage bac_tracker:data players[0].advancements[{name:"anchorman",category:"nether"}] run function bacap_rewards:nether/anchorman
execute if entity @s[advancements={minecraft:nether/charge_respawn_anchor=true}] unless data storage bac_tracker:data players[0].advancements[{name:"not_quite_nine_lives",category:"nether"}] run function bacap_rewards:nether/not_quite_nine_lives
execute if entity @s[advancements={blazeandcave:nether/we_got_a_live_one=true}] unless data storage bac_tracker:data players[0].advancements[{name:"we_got_a_live_one",category:"nether"}] run function bacap_rewards:nether/we_got_a_live_one
execute if entity @s[advancements={blazeandcave:nether/when_piglins_fly=true}] unless data storage bac_tracker:data players[0].advancements[{name:"when_piglins_fly",category:"nether"}] run function bacap_rewards:nether/when_piglins_fly
execute if entity @s[advancements={blazeandcave:nether/electrifying_alliance=true}] unless data storage bac_tracker:data players[0].advancements[{name:"electrifying_alliance",category:"nether"}] run function bacap_rewards:nether/electrifying_alliance
execute if entity @s[advancements={blazeandcave:nether/time_to_fire_back=true}] unless data storage bac_tracker:data players[0].advancements[{name:"time_to_fire_back",category:"nether"}] run function bacap_rewards:nether/time_to_fire_back
execute if entity @s[advancements={blazeandcave:nether/from_whence_it_came=true}] unless data storage bac_tracker:data players[0].advancements[{name:"from_whence_it_came",category:"nether"}] run function bacap_rewards:nether/from_whence_it_came
execute if entity @s[advancements={minecraft:nether/find_bastion=true}] unless data storage bac_tracker:data players[0].advancements[{name:"those_were_the_days",category:"nether"}] run function bacap_rewards:nether/those_were_the_days
execute if entity @s[advancements={minecraft:nether/loot_bastion=true}] unless data storage bac_tracker:data players[0].advancements[{name:"war_pigs",category:"nether"}] run function bacap_rewards:nether/war_pigs
execute if entity @s[advancements={blazeandcave:nether/gilty=true}] unless data storage bac_tracker:data players[0].advancements[{name:"gilty",category:"nether"}] run function bacap_rewards:nether/gilty
execute if entity @s[advancements={blazeandcave:nether/wub_wub_wub=true}] unless data storage bac_tracker:data players[0].advancements[{name:"wub_wub_wub",category:"nether"}] run function bacap_rewards:nether/wub_wub_wub
execute if entity @s[advancements={blazeandcave:nether/nugget_in_a_biscuit=true}] unless data storage bac_tracker:data players[0].advancements[{name:"nugget_in_a_biscuit",category:"nether"}] run function bacap_rewards:nether/nugget_in_a_biscuit
execute if entity @s[advancements={blazeandcave:nether/dark_ages=true}] unless data storage bac_tracker:data players[0].advancements[{name:"dark_ages",category:"nether"}] run function bacap_rewards:nether/dark_ages
execute if entity @s[advancements={blazeandcave:nether/burnt_right_into_your_soul=true}] unless data storage bac_tracker:data players[0].advancements[{name:"burnt_right_into_your_soul",category:"nether"}] run function bacap_rewards:nether/burnt_right_into_your_soul
execute if entity @s[advancements={blazeandcave:nether/a_soul_for_a_soul=true}] unless data storage bac_tracker:data players[0].advancements[{name:"a_soul_for_a_soul",category:"nether"}] run function bacap_rewards:nether/a_soul_for_a_soul
execute if entity @s[advancements={blazeandcave:nether/let_me_out=true}] unless data storage bac_tracker:data players[0].advancements[{name:"let_me_out",category:"nether"}] run function bacap_rewards:nether/let_me_out
execute if entity @s[advancements={blazeandcave:nether/inception=true}] unless data storage bac_tracker:data players[0].advancements[{name:"inception",category:"nether"}] run function bacap_rewards:nether/inception
execute if entity @s[advancements={blazeandcave:nether/the_descent=true}] unless data storage bac_tracker:data players[0].advancements[{name:"the_descent",category:"nether"}] run function bacap_rewards:nether/the_descent
execute if entity @s[advancements={minecraft:nether/obtain_ancient_debris=true}] unless data storage bac_tracker:data players[0].advancements[{name:"nether_say_die",category:"nether"}] run function bacap_rewards:nether/nether_say_die
execute if entity @s[advancements={blazeandcave:nether/holy_scrap=true}] unless data storage bac_tracker:data players[0].advancements[{name:"holy_scrap",category:"nether"}] run function bacap_rewards:nether/holy_scrap
execute if entity @s[advancements={blazeandcave:nether/diamonds_are_not_forever=true}] unless data storage bac_tracker:data players[0].advancements[{name:"diamonds_are_not_forever",category:"nether"}] run function bacap_rewards:nether/diamonds_are_not_forever
execute if entity @s[advancements={blazeandcave:nether/moar_upgraded_tools=true}] unless data storage bac_tracker:data players[0].advancements[{name:"moar_upgraded_tools",category:"nether"}] run function bacap_rewards:nether/moar_upgraded_tools
execute if entity @s[advancements={minecraft:nether/netherite_armor=true}] unless data storage bac_tracker:data players[0].advancements[{name:"a_knight_to_nether_forget",category:"nether"}] run function bacap_rewards:nether/a_knight_to_nether_forget
execute if entity @s[advancements={blazeandcave:nether/soul_runnings=true}] unless data storage bac_tracker:data players[0].advancements[{name:"soul_runnings",category:"nether"}] run function bacap_rewards:nether/soul_runnings
execute if entity @s[advancements={blazeandcave:nether/fool_me_twice=true}] unless data storage bac_tracker:data players[0].advancements[{name:"fool_me_twice",category:"nether"}] run function bacap_rewards:nether/fool_me_twice
execute if entity @s[advancements={blazeandcave:nether/get_a_lode_of_this=true}] unless data storage bac_tracker:data players[0].advancements[{name:"get_a_lode_of_this",category:"nether"}] run function bacap_rewards:nether/get_a_lode_of_this
execute if entity @s[advancements={minecraft:nether/use_lodestone=true}] unless data storage bac_tracker:data players[0].advancements[{name:"country_lode_take_me_home",category:"nether"}] run function bacap_rewards:nether/country_lode_take_me_home
execute if entity @s[advancements={blazeandcave:nether/lodes_of_applications=true}] unless data storage bac_tracker:data players[0].advancements[{name:"lodes_of_applications",category:"nether"}] run function bacap_rewards:nether/lodes_of_applications
execute if entity @s[advancements={blazeandcave:nether/netherite_miner=true}] unless data storage bac_tracker:data players[0].advancements[{name:"netherite_miner",category:"nether"}] run function bacap_rewards:nether/netherite_miner
execute if entity @s[advancements={blazeandcave:nether/brute_force=true}] unless data storage bac_tracker:data players[0].advancements[{name:"brute_force",category:"nether"}] run function bacap_rewards:nether/brute_force
execute if entity @s[advancements={blazeandcave:nether/et_tu_brute=true}] unless data storage bac_tracker:data players[0].advancements[{name:"et_tu_brute",category:"nether"}] run function bacap_rewards:nether/et_tu_brute
execute if entity @s[advancements={blazeandcave:nether/hot_reels=true}] unless data storage bac_tracker:data players[0].advancements[{name:"hot_reels",category:"nether"}] run function bacap_rewards:nether/hot_reels
execute if entity @s[advancements={blazeandcave:nether/nether_rock_collection=true}] unless data storage bac_tracker:data players[0].advancements[{name:"nether_rock_collection",category:"nether"}] run function bacap_rewards:nether/nether_rock_collection
execute if entity @s[advancements={blazeandcave:nether/ancient_restoration=true}] unless data storage bac_tracker:data players[0].advancements[{name:"ancient_restoration",category:"nether"}] run function bacap_rewards:nether/ancient_restoration
execute if entity @s[advancements={blazeandcave:nether/hot_spring=true}] unless data storage bac_tracker:data players[0].advancements[{name:"hot_spring",category:"nether"}] run function bacap_rewards:nether/hot_spring
execute if entity @s[advancements={blazeandcave:nether/polar_opposites=true}] unless data storage bac_tracker:data players[0].advancements[{name:"polar_opposites",category:"nether"}] run function bacap_rewards:nether/polar_opposites
execute if entity @s[advancements={blazeandcave:nether/jenga=true}] unless data storage bac_tracker:data players[0].advancements[{name:"jenga",category:"nether"}] run function bacap_rewards:nether/jenga
execute if entity @s[advancements={blazeandcave:nether/instant_mining=true}] unless data storage bac_tracker:data players[0].advancements[{name:"instant_mining",category:"nether"}] run function bacap_rewards:nether/instant_mining
execute if entity @s[advancements={blazeandcave:nether/master_netherite_miner=true}] unless data storage bac_tracker:data players[0].advancements[{name:"master_netherite_miner",category:"nether"}] run function bacap_rewards:nether/master_netherite_miner
execute if entity @s[advancements={blazeandcave:nether/netherite_mad_lad=true}] unless data storage bac_tracker:data players[0].advancements[{name:"netherite_mad_lad",category:"nether"}] run function bacap_rewards:nether/netherite_mad_lad
execute if entity @s[advancements={blazeandcave:nether/beacon_overlord=true}] unless data storage bac_tracker:data players[0].advancements[{name:"beacon_overlord",category:"nether"}] run function bacap_rewards:nether/beacon_overlord
execute if entity @s[advancements={minecraft:adventure/spyglass_at_ghast=true}] unless data storage bac_tracker:data players[0].advancements[{name:"is_it_a_balloon",category:"nether"}] run function bacap_rewards:nether/is_it_a_balloon
execute if entity @s[advancements={blazeandcave:nether/a_piglins_best_friend=true}] unless data storage bac_tracker:data players[0].advancements[{name:"a_piglins_best_friend",category:"nether"}] run function bacap_rewards:nether/a_piglins_best_friend
execute if entity @s[advancements={minecraft:nether/ride_strider_in_overworld_lava=true}] unless data storage bac_tracker:data players[0].advancements[{name:"feels_like_home",category:"nether"}] run function bacap_rewards:nether/feels_like_home
execute if entity @s[advancements={blazeandcave:nether/gilded_miner=true}] unless data storage bac_tracker:data players[0].advancements[{name:"gilded_miner",category:"nether"}] run function bacap_rewards:nether/gilded_miner
execute if entity @s[advancements={blazeandcave:nether/astrobrute=true}] unless data storage bac_tracker:data players[0].advancements[{name:"astrobrute",category:"nether"}] run function bacap_rewards:nether/astrobrute
execute if entity @s[advancements={blazeandcave:nether/ludicrous_speed=true}] unless data storage bac_tracker:data players[0].advancements[{name:"ludicrous_speed",category:"nether"}] run function bacap_rewards:nether/ludicrous_speed
execute if entity @s[advancements={blazeandcave:nether/hung_drawn_and_bartered=true}] unless data storage bac_tracker:data players[0].advancements[{name:"hung_drawn_and_bartered",category:"nether"}] run function bacap_rewards:nether/hung_drawn_and_bartered
execute if entity @s[advancements={blazeandcave:nether/time_to_upgrade=true}] unless data storage bac_tracker:data players[0].advancements[{name:"time_to_upgrade",category:"nether"}] run function bacap_rewards:nether/time_to_upgrade
execute if entity @s[advancements={blazeandcave:nether/piglin_peril=true}] unless data storage bac_tracker:data players[0].advancements[{name:"piglin_peril",category:"nether"}] run function bacap_rewards:nether/piglin_peril
